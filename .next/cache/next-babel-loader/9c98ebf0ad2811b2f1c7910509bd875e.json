{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\Michel\\\\NextJSFazt\\\\pages\\\\index.js\",\n    _this = this;\n\nimport Head from \"next/head\";\nimport Container from \"./components/Container\";\nimport fetch from \"isomorphic-fetch\";\nimport Users from \"./components/Users\";\n\nvar Index = function Index(props) {\n  console.log(props.users[0].name);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Next.js Project - Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Users, {\n      users: props.users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Index;\n\nIndex.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var res, resJSON;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"https://reqres.in/api/users\");\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return res.json();\n\n          case 5:\n            resJSON = _context.sent;\n            return _context.abrupt(\"return\", {\n              users: resJSON.data\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["E:/Michel/NextJSFazt/pages/index.js"],"names":["Head","Container","fetch","Users","Index","props","console","log","users","name","getInitialProps","ctx","res","json","resJSON","data"],"mappings":";;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,KAAN,CAAY,CAAZ,EAAeC,IAA3B;AACA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,eAKE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEJ,KAAK,CAACG;AAApB;AAAA;AAAA;AAAA;AAAA,aALF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AASD,CAXD;;KAAMJ,K;;AAaNA,KAAK,CAACM,eAAN;AAAA,sEAAwB,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACJT,KAAK,CAAC,6BAAD,CADD;;AAAA;AAChBU,YAAAA,GADgB;AAAA;AAAA,mBAEAA,GAAG,CAACC,IAAJ,EAFA;;AAAA;AAEhBC,YAAAA,OAFgB;AAAA,6CAGf;AAAEN,cAAAA,KAAK,EAAEM,OAAO,CAACC;AAAjB,aAHe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAMA,eAAeX,KAAf","sourcesContent":["import Head from \"next/head\";\r\nimport Container from \"./components/Container\";\r\nimport fetch from \"isomorphic-fetch\";\r\nimport Users from \"./components/Users\";\r\nconst Index = (props) => {\r\n  console.log(props.users[0].name);\r\n  return (\r\n    <Container>\r\n      <Head>\r\n        <title>Next.js Project - Home</title>\r\n      </Head>\r\n      <h1>Next</h1>\r\n      <Users users={props.users} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nIndex.getInitialProps = async (ctx) => {\r\n  const res = await fetch(\"https://reqres.in/api/users\");\r\n  const resJSON = await res.json();\r\n  return { users: resJSON.data };\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}